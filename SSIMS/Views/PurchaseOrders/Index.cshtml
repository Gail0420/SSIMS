@model PagedList.IPagedList<SSIMS.ViewModels.PurchaseOrderVM>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Purchase Orders";
    ViewBag.Header = "Purchase Orders";
    ViewBag.Section = "Purchases";
}

<style>
    th, td{
        text-align:center;
    }

</style>
<div align="left" style="margin:10px">
    @using (Html.BeginForm("Index", "PurchaseOrders", FormMethod.Get))
    {
        <p style="float:left">
            Search: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }
    @if (Session["role"].ToString() == "clerk")
    {
        <button style="float:right" onclick="window.location.href='/purchaseitems/index';"><i class="fas fa-shopping-cart"></i> &nbsp; View Purchase Cart</button>
    }
</div>
<table class="table">
    <tr>
        <th>
            Purchase Order ID
        </th>
        <th>
            Supplier ID
        </th>
        <th>
            @Html.ActionLink("Date Submitted", "Index", new { sortOrder = ViewBag.Dates })
        </th>
        <th>
            @Html.ActionLink("Total Cost", "Index", new { sortOrder = ViewBag.Cost })
        </th>
        <th>
            Status
        </th>
        <th>
            Details
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @item.TotalCost.ToString($"${0:0.00}")
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("View", "Details", new { id = item.ID })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

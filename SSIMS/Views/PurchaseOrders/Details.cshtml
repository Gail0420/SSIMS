@model SSIMS.ViewModels.PurchaseOrderVM  

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>PurchaseOrder</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Purchase Order ID
            @*@Html.DisplayNameFor(model => model.ID)*@
        </dt>

        <dd>

            @*@{
                var id = Convert.ToInt32(@Html.ValueFor(model => model.ID).ToString()) + 100000;
                var fullid = "PO" + id.ToString();
                @Html.Raw(fullid);
            }*@
            @Html.DisplayFor(model => model.ID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Supplier.SupplierName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Supplier.SupplierName)
        </dd>

        <dt>
            @*@Html.DisplayNameFor(model => model.Supplier.Address)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Supplier.Address)
        </dd>

        <dt>
            @*@Html.DisplayNameFor(model => model.Supplier.PhoneNumber)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Supplier.PhoneNumber)
        </dd>

        <dt>
            Submitted By
            @*@Html.DisplayNameFor(model => model.CreatedByStaff.Name)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedByStaff.Name)
        </dd>

        <dt>
            Date Submitted
            @*@Html.DisplayNameFor(model => model.CreatedDate)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        <dt>
            Approved by
            @*@Html.DisplayNameFor(model => model.RepliedByStaff.Name)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RepliedByStaff.Name)
        </dd>

        <dt>
            Approved On
            @*@Html.DisplayNameFor(model => model.ResponseDate)*@
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ResponseDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
        @if (Html.ValueFor(model => model.Status).ToString() == "InProgress" || Html.ValueFor(model => model.Status).ToString() == "Completed")
        {
            <dt>
                Delivery Orders
            </dt>
            <dd></dd>
            foreach (var item in Model.DeliveryOrders)
            {
                <dt></dt>
                <dd>
                    @{

                        var id = Convert.ToInt32(@Html.ValueFor(ModelItem => item.ID).ToString()) + 100000;
                        var fullid = "DO" + id.ToString();

                        @Html.Raw(fullid); @Html.Raw("|"); @Html.ActionLink("View", "ViewDeliveryOrder", new { id = item.ID })
                    }
                </dd>
            }
    }

    </dl>
    <table class="table">
        <tr>
            <th>
                Item Code
            </th>
            <th>
                Item Description
            </th>
            <th>
                Quantity
            </th>
            <th>
                Unit Price
            </th>
            <th>
                Amount
            </th>
            <th></th>
        </tr>


        @foreach (var item in Model.PurchaseItems)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tender.Item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Qty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tender.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                </td>
            </tr>
        }
        <tr>
            <th>
               
            </th>
            <th>
                
            </th>
            <th>
                
            </th>
            <th>
                Total Cost
            </th>
            <th>
                @Html.DisplayFor(model => model.TotalCost)
            </th>
            <th></th>
        </tr>

        <tr>
            <td>
                @if (Html.ValueFor(model => model.Status).ToString() == "Pending")
                {
                    @Html.ActionLink("Reject", "Reject", new { id = Model.ID })
                }
            </td>
            <td></td>

            <td>
                @if (Html.ValueFor(model => model.Status).ToString() == "InProgress")
                {
                    @Html.ActionLink("Continue Delivery Order", "DeliveryOrder", new { id = Model.ID })
                }
                @if (Html.ValueFor(model => model.Status).ToString() == "Approved")
                {
                    @Html.ActionLink("Create Delivery Order", "DeliveryOrder", new { id = Model.ID })
                }
            </td>
            <td>
                @if (Html.ValueFor(model => model.Status).ToString() == "Pending")
                {
                    @Html.ActionLink("Cancel", "Cancel", new { id = Model.ID })
                }
            </td>
            <td>
                @if (Html.ValueFor(model => model.Status).ToString() == "Pending")
                {
                    @Html.ActionLink("Approve", "Approve", new { id = Model.ID })
                }
            </td>
        </tr>
    </table>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>

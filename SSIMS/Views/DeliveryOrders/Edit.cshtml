@model SSIMS.ViewModels.DeliveryOrderVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>DeliveryOrderVM</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.ID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ID)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Supplier.SupplierName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Supplier.SupplierName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Supplier.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Supplier.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Supplier.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Supplier.PhoneNumber)
        </dd>

        <dt>
            Attn:
            @Html.DisplayNameFor(model => model.CreatedByStaff.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedByStaff.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RepliedByStaff.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.RepliedByStaff.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ResponseDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ResponseDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PurchaseOrderID)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PurchaseOrderID)
        </dd>
    </dl>
    <table class="table">

        <tr>
            <th>
                Item Code
            </th>
            <th>
                Item Description
            </th>
            <th>
                Expected Quantity
            </th>
            <th>
                Actual Quantity
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model.PurchaseItems)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Item.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HandOverQty)
                </td>
                <td>
                    @Html.EditorFor(modelItem => item.TakeOverQty)
                    @Html.ValidationMessageFor(modelItem => item.TakeOverQty, "", new { @class = "text-danger" })

                    <div id="rsp_email"><!-- --></div>
                </td>
            </tr>
        }
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "PurchaseOrders/Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

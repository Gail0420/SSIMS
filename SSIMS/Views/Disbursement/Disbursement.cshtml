@model SSIMS.Models.DisbursementList

@using SSIMS.Models;
@{
    ViewBag.Header = "Disbursement";
    ViewBag.Section = "Disbursements";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string fullid = Model.ID.ToString($"DL{0:100000}");
    string collectionTime = Model.Department.CollectionPoint.Time.ToString("hh:mm tt");
    int size = Model.ItemTransactions.Count() * 2;
    int sizeok = Model.ItemTransactions.Count();
    int otp = Model.OTP;
}

<style>
    th, td {
        text-align: center;
    }

    #top-bar, #bottom-bar {
        width: 100%;
        height: 50px;
        margin: 5px 0px;
    }

        #top-bar button {
            float: left;
            margin-right: 50px;
            width: 200px;
            height: 40px;
            font-size: 15px;
            font-weight: bold;
            color: white;
            background-color: #437373;
        }

    #info-table-container {
        width: 100%;
        height: 150px;
    }

    #list-title {
        float: left;
        margin: 20px 10px 0px 30px;
        font-size: 50px;
        color: #205050;
    }

    #info-table {
        width: 40%;
        box-shadow: none;
        float: right;
        margin: 30px 30px 0px 50px;
        font-weight: bold;
    }

    #table-bottom {
        float: right;
    }

    #form-container {
        box-shadow: 2px 4px 8px 0px rgba(47,79,79,0.2);
        padding: 20px;
        background: linear-gradient(to right, rgba(146, 167, 154, 0.20) 0%, rgba(115, 147, 147, 0.31) 100%);
    }
</style>




<div id="top-bar">
    <div>
        <button onclick="window.location.href = '/Disbursement/Current';">Back</button>
    </div>
    <div style="float:right">
        @Html.ActionLink("Print", "Print", new { id = Model.ID })
        <button type="button" id=@Model.ID style="margin-right:0px" onclick="window.location.href = '/Disbursement/Print';">Print</button>
    </div>
</div>
<div id="form-container">
    <div id="info-table-container">
        <p id="list-title">@fullid</p>
        <table id="info-table">
            <tr>
                <td style="text-align: right">
                    Department :
                </td>
                <td>
                    @Model.Department.DeptName
                </td>
            </tr>
            <tr>
                <td style="text-align:right">
                    Collection Point :
                </td>
                <td style="width: 250px">
                    @Model.Department.CollectionPoint.Location
                </td>
            </tr>
            <tr>
                <td style="text-align:right">
                    Collection Time :
                </td>
                <td>
                    @collectionTime
                </td>
            </tr>
        </table>
    </div>

    @using (Html.BeginForm("Disbursement", "Disbursement", FormMethod.Post, new { @id = "dform" }))
    {
        @Html.AntiForgeryToken()
        <div class="table-responsive">
            <table class="table">
                <tr>
                    <th>No.</th>
                    <th>Item Code</th>
                    <th>Item Description</th>
                    <th>Unit of Measure</th>
                    <th>Handover Qty</th>
                    <th>Collected</th>
                    <th>Remarks</th>
                    <th>Checked</th>
                </tr>
                @{
                    int count = 0;
                }
                @for (int i = 0; i < Model.ItemTransactions.Count; i++)
                {
                    count = i + 1;
                    string cb = "cb" + i;
                    <tr>
                        <td>
                            @count
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.ItemTransactions.ToList()[i].Item.ID)
                            @Html.HiddenFor(model => model.ItemTransactions.ToList()[i].Item.ID, new { htmlAttributes = new { @class = "form-control" }, })
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.ItemTransactions.ToList()[i].Item.Description)
                            @Html.HiddenFor(model => model.ItemTransactions.ToList()[i].Item.Description, new { htmlAttributes = new { @class = "form-control" }, })
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.ItemTransactions.ToList()[i].Item.UnitOfMeasure)
                            @Html.HiddenFor(model => model.ItemTransactions.ToList()[i].Item.UnitOfMeasure, new { htmlAttributes = new { @class = "form-control" }, })
                        </td>

                        <td>
                            @Html.DisplayFor(model => model.ItemTransactions.ToList()[i].HandOverQty)
                            @Html.HiddenFor(model => model.ItemTransactions.ToList()[i].HandOverQty, new { htmlAttributes = new { @class = "form-control" }, })
                        </td>

                        <td>
                            @Html.EditorFor(model => model.ItemTransactions.ToList()[i].TakeOverQty, new { htmlAttributes = new { @class = "form-control", max = Model.ItemTransactions.ToList()[i].HandOverQty, min = 0 } })
                        </td>

                        <td>
                            @Html.EditorFor(model => model.ItemTransactions.ToList()[i].Reason, new { htmlAttributes = new { @class = "form-control" }, })
                        </td>
                        <td onchange="oncheck()">@Html.CheckBox("checkbox", false, new { @id = cb })</td>
                    </tr>
                }
            </table>

            @Html.HiddenFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" }, })
        </div>

    }
    <div id="bottom-bar">
        <table id="table-bottom">
            <tr style="height:50px">
                <td>
                    Verification Code: &nbsp;
                </td>
                <td>
                    <input style="width:100px" id="otpEntered" value="" type="text" required />
                </td>
            </tr>
            <tr>
                <td></td>
                <td><button id="submit-button" disabled style="width:100px; color:lightgrey" type="submit" onclick="verify()">Complete</button></td>
            </tr>
        </table>
    </div>
</div>

@using (Html.BeginForm("CompleteDisbursement", "Disbursement", FormMethod.Post,new { @id = "complete" }))
{
    @Html.AntiForgeryToken()
    <input id="reply" name="reply" type="hidden" value="" />
    <input name="id" type="hidden" value="@Model.ID" />
}




<script>
    function oncheck() {
        var boxes = document.getElementsByName("checkbox");
        var count = 0
        for (i = 0; i < @size; i++) {
            if (boxes[i].checked) {
                count++;
            }
        }
        if (count == @sizeok) {
            activate();
        } else {
            deactivate();
        }
    }

    function activate() {
        var button = document.getElementById("submit-button");
        button.style.color = "";
        button.removeAttribute("disabled");
    }

    function deactivate() {
        var button = document.getElementById("submit-button");
        button.style.color = "lightgrey";
        button.setAttribute("disabled", true);
    }

    function verify() {
        var otp = $("#otpEntered").val().toString();
        var id = @Model.ID;

        $.getJSON('@Url.Action("Verify")', { p : otp, d: id  }, function (response) {
                if (response != null && !jQuery.isEmptyObject(response))
                {
                    if (response == "false") {
                        alert("Invalid OTP! Please try again.");
                    }
                    else {
                        buildReply();
                        $("#complete").submit();
                    }
                };
        }
        );

        function buildReply() {
            var s = $('.text-box.single-line').serialize();
            $("#reply").val(decodeURI(s));
        }

    }



</script>
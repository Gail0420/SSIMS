@model PagedList.IPagedList<SSIMS.Models.DisbursementList>
@using PagedList.Mvc;

@{
    ViewBag.Header = "Disbursements";
    ViewBag.Section = "Disbursements";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string status = ViewBag.DisbursementStatus ?? "";
}
<style>
    th, td {
        text-align: center;
    }
    .text-empty {
        margin: 60px auto 10px auto;
        width: 100%;
        text-align: center;
        font-size: 100px;
        color: lightgray;
    }
    .table-responsive{
        min-height:700px;
    }

    #top-bar {
        width: 100%;
        height: 50px;
        margin: 5px 0px;
    }

        #top-bar button {
            float: left;
            margin-right: 50px;
            width: 200px;
            height: 40px;
            font-size: 15px;
            font-weight: bold;
            color: white;
            background-color: #437373;
        }
    .special {
        background: linear-gradient(to right, rgba(146, 167, 154, 0.20) 0%, rgba(115, 147, 147, 0.31) 100%);
    }
</style>

@if(ViewBag.staffrole != "DeptRep")
{
<div id="top-bar">
    <div>
        <button onclick="window.location.href = '/Retrieval/Index';">Go to Retrievals</button>
    </div>
    <div>
        <button onclick="window.location.href = '/Disbursement/Current';">Current Disbursements</button>
    </div>
</div>
}
<div class="table-responsive">
    <label> &nbsp;View by Status: &nbsp;</label>
    &nbsp; @Html.ActionLink("Pending", "Index", new { status = "Pending" }) &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
    @Html.ActionLink("Completed", "Index", new { status = "Completed" }) &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
    @Html.ActionLink("Rejected", "Index", new { status = "Rejected" }) &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
    @Html.ActionLink("View All", "Index", new { status = "All" })

    <table class="table">
        <tr class="special">
            <th>Disbursement ID</th>
            <th>Created Date</th>
            <th>Department</th>
            <th>Status</th>
            <th>Created By</th>
            <th>View Details</th>
            @if (Model.Count > 0 && status == "Pending")
            {
                <th>
                    Return
                </th>
            }
        </tr>

        @foreach (var dl in Model)
        {
            string fullid = dl.ID.ToString($"DL{0:1000000}");
            <tr>
                <td>
                    @fullid
                </td>
                <td>
                    @Html.DisplayFor(modelItem => dl.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => dl.Department.ID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => dl.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => dl.CreatedByStaff.Name)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = dl.ID })
                </td>
                @if (Model.Count > 0 && status == "Pending")
                {
                    <td>
                        @Html.ActionLink("Return to Store", "Return", new { id = dl.ID, })
                    </td>
                }

            </tr>
        }
    </table>
    @if (Model.Count() == 0)
    {
        <div style="width:100%;height:50px">
            <p class="text-empty">Empty</p>
        </div>
    }
</div>

    <br />
    <table class="table">
        <tr>
            <td align="center">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</td>
        </tr>
        <tr>
            <td align="center">@Html.PagedListPager(Model, page => Url.Action("NextPage", new { page }))</td>
        </tr>
    </table>

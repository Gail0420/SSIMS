@model SSIMS.ViewModels.InventoryItemDetailsVM
@using SSIMS.ViewModels;
@{
    ViewBag.Section = "Inventory";
    ViewBag.Header = "Inventory Item Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool isLow = Model.InStoreQty <= Model.ReorderLvl ? true : false;
    string cI = "", mI = "", Index = "";
    bool hasPrev = false, hasNext = false, viewStock = ViewBag.StockCard == "true" ? true : false;
    if (ViewBag.CurrentItemIndex != null)
    {
        cI = ViewBag.CurrentItemIndex.ToString();
        mI = ViewBag.MaxItemsCount.ToString();
        Index = cI + " / " + mI;
        hasPrev = int.Parse(cI) > 1 ? true : false;
        hasNext = int.Parse(cI) == int.Parse(mI) ? false : true;
    }
    string searchString = Session["InventorySearchString"] == null ? "" : Session["InventorySearchString"].ToString();
    string lowStock = Session["InventoryLowStockMode"] == null ? "" : Session["InventoryLowStockMode"].ToString();
}
<script>
    function stockcard() {
        var stockc = document.getElementById("stock-card");
        var supplier = document.getElementById("supplier-information");
        var stocki = document.getElementById("stock-information");
        if (stockc.hidden == true) {
            stockc.hidden = false;
            stocki.hidden = true;
            supplier.hidden = true;
        } else {
            stockc.hidden = true;
            stocki.hidden = false;
            supplier.hidden = false;
        }
    }
    function adjust(i) {
        post('/inventory/adjust', { 'add': "true", 'item': @Model.ItemCode });
    }
    function post(path, params, method = 'post') {
        const form = document.createElement('form');
        form.method = method;
        form.action = path;

        for (const key in params) {
            if (params.hasOwnProperty(key)) {
                const hiddenField = document.createElement('input');
                hiddenField.type = 'hidden';
                hiddenField.name = key;
                hiddenField.value = params[key];
                form.appendChild(hiddenField);
            }
        }
        document.body.appendChild(form);
        form.submit();
    }
</script>
<style>
    #full-container i {
        color: dimgray;
    }

    .reorderbox {
        width: 100px;
        height: 30px;
        margin: 5px;
        text-align: center;
        text-indent: 10px;
        background-color: floralwhite;
        border: inset 0.5px lightgrey;
        font-size: 20px;
    }

    .rebtn {
        width: 60px;
    }
</style>
<div style="margin-left:15px;margin-top:10px;position:relative;top:10px">
    @Html.ActionLink("Back to List", "Index", new { searchString = searchString, lowStock = lowStock })
</div>

<div id="full-container" style="height:720px;width:920px; box-shadow: 2px 4px 8px 0px rgba(47,79,79,0.2);">
    <div id="item-information" style="margin:20px 0px 5px 10px;width:900px;">
        <table style="font-size:17px">
            <tr style="background-color:white">
                <td colspan="2" align="left" height="60px" style="font-size:35px;text-indent:60px">@Model.ItemCode</td>
                <td align="center" height="50px">
                    @if (hasPrev)
                    {
                        <a style="text-decoration:none" href="~/inventory/details/@ViewBag.PrevItemID"><<</a>
                    }
                    &nbsp; @Index &nbsp;
                    @if (hasNext)
                    {
                        <a style="text-decoration:none" href="~/inventory/details/@ViewBag.NextItemID">>></a>
                    }
                </td>
            </tr>
            <tr>
                <td height="10px"></td>
                <td></td>
                <td rowspan="6" align="left" valign="middle" width="280px"><img src=@Url.Content(Model.ImageURL) style="width:280px;" /></td>
            </tr>
            <tr>
                <td align="right" width="200px" height="15px">@Html.DisplayNameFor(model => model.ItemCode) :</td>
                <td align="center" width="400px"><div style="width:300px;background-color:floralwhite;border:solid 1px lightgray">@Html.DisplayFor(model => model.ItemCode)</div></td>
            </tr>
            <tr>
                <td align="right" height="15px">@Html.DisplayNameFor(model => model.Category) :</td>
                <td align="center"><div style="width:300px;background-color:floralwhite;border:solid 1px lightgray">@Html.DisplayFor(model => model.Category)</div></td>
            </tr>
            <tr>
                <td align="right" height="15px">@Html.DisplayNameFor(model => model.Description) :</td>
                <td align="center"><div style="width:300px;background-color:floralwhite;border:solid 1px lightgray">@Html.DisplayFor(model => model.Description)</div></td>
            </tr>
            <tr>
                <td align="right" height="15px">@Html.DisplayNameFor(model => model.UOM) :</td>
                <td align="center"><div style="width:300px;background-color:floralwhite;border:solid 1px lightgray">@Html.DisplayFor(model => model.UOM)</div></td>
            </tr>
            <tr><td height="15px"></td><td></td></tr>
        </table>
    </div>
    <div id="stock-information" style="width: 450px; margin-left: 10px; height: 350px; float: left; background-color: #efefef; padding-bottom: 40px">
        <table style="font-size:17px;width:100%;">
            <tr align="center">
                <td colspan="2" height="70px" style="font-size: 22px ">Stock Information</td>
            </tr>
            <tr align="center">
                <td colspan="2" height="30px">@Html.DisplayNameFor(model => model.InStoreQty)</td>
            </tr>
            <tr align="center">
                @if (isLow)
                {
                    <td colspan="2" height="80px">
                        <div id="instorelabel" style="height:50px; width: 150px; background-color: floralwhite;color: maroon; font-weight: bold;font-size:30px; border: solid 1px lightgray;">
                            @Model.InStoreQty
                        </div>
                    </td>
                }
                else
                {
                    <td colspan="2" height="80px">
                        <div style="height:50px;width: 150px;background-color: floralwhite;font-weight: bold;font-size:30px;border: solid 1px lightgray;">
                            @Html.DisplayFor(model => model.InStoreQty)
                        </div>
                    </td>
                }

            </tr>
            <tr>
                @{
                    string address = "/inventory/adjustment?command=add&item=" + Model.ItemCode;
                }

                <td align="center" style="height:50px">
                    <button style="width:150px;" onclick="window.location.href = '@address';">
                        <i class="fa fa-gears"></i> &nbsp; Adjust
                    </button>
                </td>
                <td align="center" style="height:50px">
                    <button style="width:150px;" onclick="stockcard()">
                        <i class="fa fa-file"></i> &nbsp; Stock Card
                    </button>
                </td>


            </tr>

            @if (Session["role"].ToString() == "manager" || Session["role"].ToString() == "supervisor")
            {
                <tr align="center">
                    <td height="30px">@Html.DisplayNameFor(model => model.ReorderLvl)</td>
                    <td width="50%"><div><input class="reorderbox" id="lvlinput" type="number" min="0" value=@Model.ReorderLvl readonly /><button onclick="lvl()" id="buttonlvl" class="rebtn"><i class="fa fa-pencil"></i><span id="lvltext"> edit</span></button></div></td>
                </tr>
                <tr align="center">
                    <td height="30px">@Html.DisplayNameFor(model => model.ReorderQty)</td>
                    <td><div><input class="reorderbox" id="qtyinput" type="number" min="0" value=@Model.ReorderQty readonly /><button onclick="qty()" id="buttonqty" type="submit" class="rebtn"><i class="fa fa-pencil"></i><span id="qtytext"> edit</span></button></div></td>
                </tr>
            }
            else
            {
                <tr align="center">
                    <td height="30px">@Html.DisplayNameFor(model => model.ReorderLvl)</td>
                    <td width="50%"><div><input class="reorderbox" id="lvlinput" type="number" min="0" value=@Model.ReorderLvl readonly /></div></td>
                </tr>
                <tr align="center">
                    <td height="30px">@Html.DisplayNameFor(model => model.ReorderQty)</td>
                    <td><div><input class="reorderbox" id="qtyinput" type="number" min="0" value=@Model.ReorderQty readonly /></div></td>
                </tr>
            }
        </table>
    </div>
    <div id="supplier-information" style="width:450px;height:350px;float:left;background-color:#efefef;padding-bottom:40px">
        <table style="font-size:18px;width:100%">
            <tr align="center"><td height="70px" style="font-size:22px">Purchase from Supplier</td></tr>
            <tr align="center"><td height="15px" style="font-size:12px">Click to add @Html.DisplayFor(model => model.ReorderQty) @Html.DisplayFor(model => model.UnitDisplay) to Purchase Cart</td></tr>
            <tr align="center"><td height="45px"><form action="~/PurchaseItems/AddPurchaseItem/@Model.Tender1"><button style="width:200px"><i class="fa fa-truck"> </i> @Html.DisplayFor(model => model.Supplier1) &nbsp;-&nbsp;  @Html.DisplayFor(model => model.Supplier1Tender)</button></form></td></tr>
            <tr align="center"><td height="45px"><form action="~/PurchaseItems/AddPurchaseItem/@Model.Tender2"><button style="width:200px"><i class="fa fa-truck"> </i> @Html.DisplayFor(model => model.Supplier2) &nbsp;-&nbsp;  @Html.DisplayFor(model => model.Supplier2Tender)</button></form></td></tr>
            <tr align="center"><td height="45px"><form action="~/PurchaseItems/AddPurchaseItem/@Model.Tender3"><button style="width:200px"><i class="fa fa-truck"> </i> @Html.DisplayFor(model => model.Supplier3) &nbsp;-&nbsp;  @Html.DisplayFor(model => model.Supplier3Tender)</button></form></td></tr>

            @if (Session["role"].ToString() == "clerk")
            {
                <tr align="center">
                    <td height="50px" valign="bottom">
                        <form action="~/PurchaseItems/Index">
                            <button style="width:200px;font-size:15px;"><i class="fas fa-shopping-cart">  </i>    View Purchase Cart</button>
                        </form>
                    </td>
                </tr>
            }
            <tr align="center"><td height="20px" style="font-size:13px" valign="bottom">@Html.DisplayFor(model => model.LastOrderLine1)</td></tr>
            <tr align="center"><td height="15px" style="font-size:13px">@Html.DisplayFor(model => model.LastOrderLine2)</td></tr>
        </table>
    </div>
    <div id="stock-card" style="height:350px;width:900px;" hidden>
        <button style="width:150px;height:30px;text-align:center;position:relative;left:750px;margin-bottom:5px" onclick="stockcard()"><i class="fas fa-arrow-alt-circle-left"></i> &nbsp; Back</button>
        <table style="font-size:12px">
            <tr style="font-weight:bold;background: linear-gradient(to right, rgba(146, 167, 154, 0.20) 0%, rgba(115, 147, 147, 0.31) 100%);border-bottom: solid lightgrey 3px;height:20px">
                <td align="center" width="150px">Date</td>
                <td align="center" width="450px">Movement Details</td>
                <td align="center" width="150px">Qty Change</td>
                <td align="center" width="150px">In Store Balance</td>
            </tr>
            @for (int i = 0; i < Model.StockCard.Count(); i++)
            {
                <tr style="height:18px;border-bottom: solid lightgrey 1px;background: linear-gradient(to right, rgba(146, 167, 154, 0.20) 0%, rgba(115, 147, 147, 0.31) 100%)">
                    <td align="center">@Html.DisplayFor(Model => Model.StockCard[i].Date)</td>
                    <td align="center">@Html.DisplayFor(Model => Model.StockCard[i].Movement)</td>
                    <td align="center">@Html.DisplayFor(Model => Model.StockCard[i].QtyChange)</td>
                    <td align="center">@Html.DisplayFor(Model => Model.StockCard[i].InStoreBalance)</td>
                </tr>
            }
        </table>
    </div>
</div>
@if (Session["role"].ToString() == "manager" || Session["role"].ToString() == "supervisor")
{


    <script>
    function lvl() {
        var code = '@Model.ItemCode';
        var oglvl = '@Model.ReorderLvl';
        var inStore = '@Model.InStoreQty';
        var text = $("#lvltext").html();
        if (text == " edit") {
            $("#lvlinput").attr("readonly", false);
            $("#lvlinput").css("background-color", "white");
            $("#lvlinput").css("font-weight", "bold");
            $("#lvltext").html(" ok");
        } else {
            $("#lvlinput").attr("readonly", true);
            $("#lvlinput").css("background-color", "floralwhite");
            $("#lvlinput").css("font-weight", "");
            $("#lvltext").html(" edit");

            var newlvl = $("#lvlinput").val();
            if (newlvl != oglvl) {
                //getJSON call
                $.getJSON('@Url.Action("UpdateReorderLvl")', { itemcode : code, newlvl: newlvl  }, function (response) {
                    if (response) {
                        alert("Update Success!");
                        updatecolor();
                    } else {
                        alert("Update Failed!");
                        $("#lvlinput").val(oglvl)
                    };
                });
            }
        }

        function updatecolor() {
            var lvl = $("#lvlinput").val();
            if (inStore < lvl) {
                //maroon
                $("#instorelabel").css("color", "maroon");
            } else {
                //black
                $("#instorelabel").css("color", "");
            }
        }
    }


    function qty() {
        var code = '@Model.ItemCode';
        var ogqty = '@Model.ReorderQty';
        var text = $("#qtytext").html();
        if (text == " edit") {
            $("#qtyinput").attr("readonly", false);
            $("#qtyinput").css("background-color", "white");
            $("#qtyinput").css("font-weight", "bold");
            $("#qtytext").html(" ok");
        } else {
            var newqty = $("#qtyinput").val();
            $("#qtyinput").attr("readonly", true);
            $("#qtyinput").css("background-color", "floralwhite");
            $("#qtyinput").css("font-weight", "");
            $("#qtytext").html(" edit");

            var newqty = $("#qtyinput").val();
            if (newqty != ogqty) {
                //getJSON call
                $.getJSON('@Url.Action("UpdateReorderQty")', { itemcode : code, newqty: newqty  }, function (response) {
                    if (response) {
                        alert("Update Success!");
                    } else {
                        alert("Update Failed!");
                        $("#qtyinput").val(ogqty)
                    };
                });
            }
        }
    }
    </script>


}

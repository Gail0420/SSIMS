@model List<SSIMS.ViewModels.DeptHeadAuthVM>
@using SSIMS.Models;
@using SSIMS.ViewModels;
@{
    ViewBag.Header = "Delegate Authority";
    ViewBag.Section = "Delegate";
    List<Staff> stafflist = ViewBag.StaffList ?? null;
    List<Staff> staffwoheadlist = ViewBag.StaffWOHeadList ?? null;
    List<Staff> staffonlylist = ViewBag.StaffOnlyList ?? null;

    DeptHeadAuthVM currentDelegation = ViewBag.CurrentDelegation ?? null;
    bool isCurrent = currentDelegation == null ? false : true;
    string error = ViewBag.DelegateError ?? "";

    Department department = ViewBag.Department;
    string selected = ViewBag.SelectedRep;
}

<script>
    function update() {
        var dr = $("#deptrep").val();
        $("RepForm").submit();
    }

    function post(path, params, method = 'post') {
        const form = document.createElement('form');
        form.method = method;
        form.action = path;

        for (const key in params) {
            if (params.hasOwnProperty(key)) {
                const hiddenField = document.createElement('input');
                hiddenField.type = 'hidden';
                hiddenField.name = key;
                hiddenField.value = params[key];
                form.appendChild(hiddenField);
            }
        }
        document.body.appendChild(form);
        form.submit();
    }
</script>
<style>
    th, td{
        padding:10px;
        text-align:center;
    }
    #deprepbox, #newauthbox, #historybox{
        background:linear-gradient(to right, rgba(146, 167, 154, 0.20) 0%, rgba(115, 147, 147, 0.31) 100%);
        width:50%;
        padding: 20px;
    }
</style>


<div id="deprepbox">
    @using (Html.BeginForm("UpdateDeptRep", "Departments", FormMethod.Post, new { @id = "RepForm" }))
    {
        @Html.AntiForgeryToken()
        <table class="table-responsive">
            <tr>
                <th>Assigned Department Rep</th>
                <td onchange="update()">
                    <select id="deptrep" name="id">
                        <option selected value=@department.DeptRep.ID>@selected</option>
                        @foreach (Staff dr in staffonlylist)
                        {
                            <option value=@dr.ID>@dr.Name</option>
                        }
                    </select>
                </td>
                <td>
                    <button type="submit">Submit</button>
                </td>
            </tr>
        </table>

    }
</div>



<div style="width:100%">
    @if (!isCurrent)
    {
        using (Html.BeginForm(FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <h4>Delegate Authority:</h4>

            <div id="newauthbox">
                <table>
                    <tr>
                        <th>
                            Staff
                        </th>
                        <td>
                            <select name="StaffName">
                                <option selected value="">select</option>
                                @for (int i = 0; i < staffwoheadlist.Count(); i++)
                                {
                                    string name = Server.UrlEncode(staffwoheadlist[i].Name);
                                    <option value=@name>@staffwoheadlist[i].Name</option>
                                }
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <th>
                            Start Date
                        </th>
                        <td>
                            <input name="StartDate" type="date" />
                        </td>
                    </tr>
                    <tr>
                        <th>
                            End Date
                        </th>
                        <td>
                            <input name="EndDate" type="date" />
                        </td>
                    </tr>
                </table>

                <div>
                    <div>
                        <p class="text-danger">@error</p>
                    </div>
                    <div>
                        <input type="submit" value="Delegate" class="btn btn-default" />
                    </div>
                </div>
            </div>

        }

    }
    else
    {

        <table id="newauthbox">
            <tr>
                <th>
                    Current Authorized Head
                </th>
                <td>
                    @currentDelegation.StaffName
                </td>
                <td rowspan="3">
                    @using (Html.BeginForm("CancelAuthorization", "Departments", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div>
                            <input type="submit" value="Cancel" class="btn btn-default" />
                        </div>
                    }
                </td>
            </tr>
            <tr>
                <th>
                    Start Date
                </th>
                <td>
                    @currentDelegation.StartDate
                </td>
            </tr>
            <tr>
                <th>
                    End Date
                </th>
                <td>
                    @currentDelegation.EndDate
                </td>
            </tr>
        </table>
    }


    @if (Model.Count == 0 || Model == null)
    {
        <p style="font-size:50px;color:lightgray">Empty</p>
    }
    else
    {
        <table id="historybox">
            <tr>
                <th>
                    @Html.DisplayNameFor(Model => Model[0].StaffName)
                </th>
                <th>
                    @Html.DisplayNameFor(Model => Model[0].StartDate)
                </th>
                <th>
                    @Html.DisplayNameFor(Model => Model[0].EndDate)
                </th>
            </tr>
            @for (int i = 0; i < Model.Count(); i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(Model => Model[i].StaffName)
                    </td>
                    <td>
                        @Html.DisplayFor(Model => Model[i].StartDate)
                    </td>
                    <td>
                        @Html.DisplayFor(Model => Model[i].EndDate)
                    </td>
                </tr>
            }
        </table>

    }


</div>

@if (Session["role"].ToString() == "admin")
{
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

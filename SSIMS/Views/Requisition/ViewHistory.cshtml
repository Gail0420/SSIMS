@*@model IEnumerable<SSIMS.Models.RequisitionOrder>*@
@model PagedList.IPagedList<SSIMS.Models.RequisitionOrder>
@using PagedList.Mvc;
@*@model SSIMS.Models.Status*@
@{
    ViewBag.Title = "ViewHistory";
}

<h2>View Requisition Order History</h2>

<p>@Html.ActionLink("View Pending Requisition", "Manage")</p>

<label> See by status: </label>
@Html.ActionLink("Approved", "ViewHistory", new { status = "Approved" })
@Html.ActionLink("Rejected", "ViewHistory", new { status = "Rejected" })
@Html.ActionLink("Completed", "ViewHistory", new { status = "Completed" })
@Html.ActionLink("See All", "ViewHistory", new { status = "All" })



<table class="table">
    <tr>

        <th>
            Requisition ID
            @*@Html.DisplayNameFor(model => model.ID)*@
        </th>

        <th>
            Created Date
            @*@Html.DisplayNameFor(model => model.CreatedDate)*@
        </th>

        <th>
            Status
            @*@Html.DisplayNameFor(model => model.Status)*@
        </th>

        <th>
            Response Date
            @*@Html.DisplayNameFor(model => model.ResponseDate)*@
        </th>

        <th>
            Details
        </th>

        <th></th>
    </tr>

    @foreach (var ro in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => ro.ID)
            </td>

            <td>
                @Html.DisplayFor(modelItem => ro.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => ro.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => ro.ResponseDate)
            </td>

            <td>
                @if (ro.Status == SSIMS.Models.Status.Rejected)
                {
                    @Html.ActionLink("Details", "Reject", new { id = ro.ID })
                }
                else
                {
                    @Html.ActionLink("Details", "Approve", new { id = ro.ID })

                }

            </td>
        </tr>
    }

</table>




<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
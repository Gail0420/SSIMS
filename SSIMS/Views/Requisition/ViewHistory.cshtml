@*@model IEnumerable<SSIMS.Models.RequisitionOrder>*@
@model PagedList.IPagedList<SSIMS.Models.RequisitionOrder>
@using PagedList.Mvc;
@*@model SSIMS.Models.Status*@
@{
    ViewBag.Title = "ViewHistory";
    ViewBag.Header = "Requisition Order History";
    ViewBag.Section = "Requisitions";
    int pageno = Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber;
    bool isApproved = ViewBag.CurrentStatus == "Approved" ? true : false;
    bool isRejected = ViewBag.CurrentStatus == "Rejected" ? true : false;
    bool isCompleted = ViewBag.CurrentStatus == "Completed" ? true : false;
    bool isViewAll = ViewBag.CurrentStatus == "ALL" ? true : false;

}
<style>
    th, td{
        text-align:center;
    }
    .special{
        background:linear-gradient(to right, rgba(146, 167, 154, 0.20) 0%, rgba(115, 147, 147, 0.31) 100%);
    }
</style>
<p style="margin:10px">    </p>
@if (ViewBag.staffrole == "DeptHead")
{
    <p>@Html.ActionLink("Manage Pending Requisitions", "Manage")</p>
}


<table style="width:50%;margin-bottom:10px">
    <tr>
        <th>Filter by status:</th>
        @if (isApproved)
        {
            <td>@Html.ActionLink("Approved", "ViewHistory", new { status = "Approved" }, new { @style = "font-weight:bold;font-size:large" })</td>
        }
        else
        {
            <td>@Html.ActionLink("Approved", "ViewHistory", new { status = "Approved" })</td>
        }
        @if (isRejected)
        {
            <td>@Html.ActionLink("Rejected", "ViewHistory", new { status = "Rejected" }, new { @style = "font-weight:bold;font-size:large" })</td>
        }
        else
        {
            <td>@Html.ActionLink("Rejected", "ViewHistory", new { status = "Rejected" })</td>
        }
        @if (isCompleted)
        {
            <td>@Html.ActionLink("Completed", "ViewHistory", new { status = "Completed" }, new { @style = "font-weight:bold;font-size:large" })</td>
        }
        else
        {
            <td>@Html.ActionLink("Completed", "ViewHistory", new { status = "Completed" })</td>
        }
        @if (isViewAll)
        {
            <td>@Html.ActionLink("View All", "ViewHistory", new { status = "ALL" }, new { @style = "font-weight:bold;font-size:large" })</td>
        }
        else
        {
            <td>@Html.ActionLink("View All", "ViewHistory", new { status = "ALL" })</td>
        }



    </tr>
</table>
@if (Model.Count == 0)
{
<p style="font-size:50px;color:lightgray">Empty</p>
}
else
{
    <table class="table">
        <tr class="special">

            <th>
                Requisition ID
                @*@Html.DisplayNameFor(model => model.ID)*@
            </th>

            <th>

                @Html.ActionLink("Created Date", "ViewHistory", new { sortOrder = ViewBag.CreDates })
                @*@Html.DisplayNameFor(model => model.CreatedDate)*@
            </th>

            <th>
                Status
                @*@Html.DisplayNameFor(model => model.Status)*@
            </th>

            <th>

                @Html.ActionLink("Response Date", "ViewHistory", new { sortOrder = ViewBag.ResDates })
                @*@Html.DisplayNameFor(model => model.ResponseDate)*@
            </th>

            <th>
                Details
            </th>

            <th></th>
        </tr>

        @foreach (var ro in Model)
        {
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => ro.ID)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => ro.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => ro.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => ro.ResponseDate)
                </td>

                <td>
                    @Html.ActionLink("Details", "Details", new { id = ro.ID })
                </td>
            </tr>
        }

    </table>
   
    <br />

    <p>Page @pageno of @Model.PageCount</p>

    @Html.PagedListPager(Model, page => Url.Action("ViewHistory", new { page, sortOrder = ViewBag.CurrentSort, status = ViewBag.CurrentStatus }))
}







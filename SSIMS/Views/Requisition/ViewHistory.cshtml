@*@model IEnumerable<SSIMS.Models.RequisitionOrder>*@
@model PagedList.IPagedList<SSIMS.Models.RequisitionOrder>
@using PagedList.Mvc;
@*@model SSIMS.Models.Status*@
@{
    ViewBag.Title = "ViewHistory";
    ViewBag.Header = "Requisition Order History";
    ViewBag.Section="Requisitions";

}

    <p style="margin:10px">    </p>
@if (ViewBag.staffrole == "DeptHead") {
<p>@Html.ActionLink("View Pending Requisition", "Manage")</p>
}

<p style="margin:20px">    </p>
<table class="table table-striped">
    <tr>
        <th>Filter by status:</th>
        <td>@Html.ActionLink("Approved", "ViewHistory", new { status = "Approved" })</td>
        <td>@Html.ActionLink("Rejected", "ViewHistory", new { status = "Rejected" })</td>
        <td>@Html.ActionLink("Completed", "ViewHistory", new { status = "Completed" })</td>
        <td>@Html.ActionLink("View All", "ViewHistory", new { status = "All" })</td>
    </tr>
</table>



<p style="margin:50px">    </p>
<table class="table">
    <tr>

        <th>
            Requisition ID
            @*@Html.DisplayNameFor(model => model.ID)*@
        </th>

        <th>
            
            @Html.ActionLink("Created Date", "ViewHistory", new { sortOrder = ViewBag.CreDates })
            @*@Html.DisplayNameFor(model => model.CreatedDate)*@
        </th>

        <th>
            Status
            @*@Html.DisplayNameFor(model => model.Status)*@
        </th>

        <th>
            
            @Html.ActionLink("Response Date", "ViewHistory", new { sortOrder = ViewBag.ResDates })
            @*@Html.DisplayNameFor(model => model.ResponseDate)*@
        </th>

        <th>
            Details
        </th>

        <th></th>
    </tr>

    @foreach (var ro in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => ro.ID)
            </td>

            <td>
                @Html.DisplayFor(modelItem => ro.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => ro.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => ro.ResponseDate)
            </td>

            <td>
                @if (ro.Status == SSIMS.Models.Status.Rejected)
                {
                    @Html.ActionLink("Details", "Reject", new { id = ro.ID })
                }
                else
                {
                    @Html.ActionLink("Details", "Approve", new { id = ro.ID })

                }

            </td>
        </tr>
    }

</table>




<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("ViewHistory", new { page, sortOrder = ViewBag.CurrentSort,status = ViewBag.CurrentStatus }))
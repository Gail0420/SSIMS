@*@model IEnumerable<SSIMS.Models.RequisitionOrder>*@
@model PagedList.IPagedList<SSIMS.Models.RequisitionOrder>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}


<h2>View Requisition List</h2>

@*<script>
        function search() {

            var searchstr = document.getElementById('searchString').value;
            post('/Requisition/Index', { 'searchString': searchstr });

        }
    </script>

    <div style="float:right">
        @Html.TextBox("searchString")
        <input type="submit" value="search" onclick="search()" />
    </div>*@

<p>
    @Html.ActionLink("Create new requisition", "Create")
</p>



<table class="table">
    <tr>

        <th>
            Requisition ID
        </th>

        <th>
            Create Date
        </th>

        <th>
            Status
        </th>

        <th>
            Response Date
        </th>

        <th>
            My Requisition
        </th>

        <th></th>
    </tr>

    @foreach (var ro in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => ro.ID)
            </td>

            <td>
                @Html.DisplayFor(modelItem => ro.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => ro.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => ro.ResponseDate)
            </td>

            <td>

                @Html.ActionLink("Details", "Details", new { id = ro.ID })

            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",new { page }))
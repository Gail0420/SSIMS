@model SSIMS.Models.RequisitionOrder

@{
    ViewBag.Title = "Details";
    ViewBag.Header = "Requisition Order Details";
    ViewBag.Section="Requisitions";
}
<script>
    function post(path, params, method = 'post') {
        const form = document.createElement('form');
        form.method = method;
        form.action = path;

        for (const key in params) {
            if (params.hasOwnProperty(key)) {
                const hiddenField = document.createElement('input');
                hiddenField.type = 'hidden';
                hiddenField.name = key;
                hiddenField.value = params[key];
                form.appendChild(hiddenField);
            }
        }
        document.body.appendChild(form);
        form.submit();
    }

    approve(){
        var comment = document.getElementById("comment").value;
        post('/requisition/approve', { 'id': @Model.ID, 'comment': comment });
    }

    reject(){
        var comment = document.getElementById("comment").value;
        post('/requisition/reject', { 'id': @Model.ID, 'comment': comment });
    }
</script>


<table  class="table table-bordered" >
    <tr>
        <th>
            Requisition ID
            @*@Html.LabelFor(x => x.ID, htmlAttributes: new { @class = "control-label col-md-2" })*@
        </th>
        <td>
            @Html.DisplayFor(x => x.ID)
        </td>
    </tr>

    <tr>
        <th>
            Department
            @*@Html.LabelFor(x => Model.CreatedByStaff.Department, htmlAttributes: new { @class = "control-label col-md-2" })*@
        </th>
        <td>
            @Html.DisplayFor(x => Model.CreatedByStaff.DepartmentID)
        </td>
    </tr>

    <tr>
        <th>Staff Name
            @*@Html.LabelFor(x => x.CreatedByStaff.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
        </th>
        <td>
            @Html.DisplayFor(x => x.CreatedByStaff.Name)

        </td>
    </tr>

    <tr>
        <th>Created Date
            @*@Html.LabelFor(x => x.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })*@
        </th>
        <td>
            @Html.DisplayFor(x => x.CreatedDate)
        </td>
    </tr>
    <tr>
        <th>Status
            @*@Html.LabelFor(x => x.Status, htmlAttributes: new { @class = "control-label col-md-2" })*@
        </th>
        <td>
            @Html.DisplayFor(x => x.Status)
        </td>
    </tr>
</table>


<table class="table">
    <tr>
        <th>
            Category
        </th>

        <th>
            Description
            @*@Html.DisplayNameFor(model => model.Item.Description)*@
        </th>

        <th>
            Unit of Measure
            @*@Html.DisplayNameFor(model => model.Item.UnitOfMeasure)*@
        </th>

        <th>
            Qty
            @*@Html.DisplayNameFor(model => model.Qty)*@
        </th>

    </tr>

    @foreach (var ro in Model.DocumentItems)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => ro.Item.Category)
            </td>

            <td>
                @Html.DisplayFor(modelItem => ro.Item.Description)
            </td>

            <td>
                @Html.DisplayFor(modelItem => ro.Item.UnitOfMeasure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => ro.Qty)
            </td>

        </tr>
    }

</table>

@*staff see below*@
@if (ViewBag.staffrole == "Staff")
{
    <p>
        @Html.ActionLink("Back to List", "Index")
    </p>
    @*staff see below when status=pending*@

    if (Model.Status == SSIMS.Models.Status.Pending)
    {
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.ID })
        </p>
        <p>
            @Html.ActionLink("Cancel", "Cancel", new { id = Model.ID })
        </p>

    }
}
else
{
    @*Dep rep see below *@
    <p>
        @Html.ActionLink("View Requisition History List", "ViewHistory")
    </p>

    <p>
        @Html.ActionLink("Back to Pending List", "Manage")
    </p>

    if (Model.Status == SSIMS.Models.Status.Pending)
    {
        @*<p>
            @Html.ActionLink("Approve", "Approve", new { id = Model.ID })
        </p>

        <p>
            @Html.ActionLink("Reject", "Reject", new { id = Model.ID })
        </p>*@
        <p style="text-align:left">
            <form action="/requisition/approve">
                <input type="text" name="comment" value=@Model.Comments />
                <input type="hidden" name="id" value="@Model.ID" />
                <button>Approve</button>
            </form>
        </p>

        <p style="text-align:right">
            <form action="/requisition/reject">
                <input type="text" name="comment" value=@Model.Comments />
                <input type="hidden" name="id" value="@Model.ID" />
                <button>Reject</button>
            </form>
        </p>

    }
}


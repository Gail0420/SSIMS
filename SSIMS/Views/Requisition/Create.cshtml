@model SSIMS.ViewModels.RequisitionItemVM

@using SSIMS.Models
@using SSIMS.ViewModels
@{
    ViewBag.Section = "Requisition";
    List<RequisitionItemVM> requisitionItems = ViewBag.RequisitionItems;
    ViewBag.Header = "Create Requisition Order";
    ViewBag.Section="Requisitions";
}



@using (Html.BeginForm("Add", "Requisition"))
{
    @Html.AntiForgeryToken()
    <table>
        <tr>
            <td>@Html.LabelFor(x => x.SelectedCategory, htmlAttributes: new { @class = "control-label col-md-2" })</td>
            <td>@Html.LabelFor(x => x.SelectedDescription, htmlAttributes: new { @class = "control-label col-md-2" })</td>
            <td>@Html.LabelFor(x => x.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })</td>
            <td>Add</td>
        </tr>

        <tr>
            <td>
                @Html.DropDownListFor(x => x.SelectedCategory, new SelectList(Model.Categories, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "Category" })
                @Html.ValidationMessageFor(x => x.SelectedCategory, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.DropDownListFor(x => Model.SelectedDescription, new SelectList(Model.Descriptions, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "Description" })
                @Html.ValidationMessageFor(x => x.SelectedDescription, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.TextBoxFor(model => model.Quantity, new { type = "number", min = "0", max = "100" })
                @Html.ValidationMessageFor(x => x.Quantity, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <input type="submit" value="Add" class="btn btn-primary" />
            </td>
        </tr>

    </table>
}



@if (requisitionItems.Count > 1)
{
    @Html.Partial("_RequisitionItemsList")
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
            $('#Category').change(function () {
                var selectedCategory = $("#Category").val();
                var descriptionSelect = $('#Description');
                descriptionSelect.empty();
                if ( selectedCategory != null &&  selectedCategory != '') {
                    $.getJSON('@Url.Action("GetDescription")', { category:  selectedCategory }, function (descriptions) {
                        if (descriptions != null && !jQuery.isEmptyObject(descriptions))
                        {
                            descriptionSelect.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(descriptions, function (index, description) {
                                descriptionSelect.append($('<option/>', {
                                    value: description.Value,
                                    text: description.Text
                                }));
                            });
                        };
                    });
                }
            });


    </script>
}

